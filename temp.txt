#include <bits/stdc++.h>
typedef long long ll;
const ll nax = 62;

using namespace std;

ll more_bits(ll l_set_bits, ll l, ll r, ll k) {
     // l got less bits than desired result so increase l.
     string sl = bitset<nax>(l).to_string();
     ll offset = 0;
     for(ll i = nax - 1; i >= 0; i--) {
          if(sl[i] == '0') {
               sl[i] = '1';
               l_set_bits++;
               offset = 1ll << 1ll * (nax - 1ll - i);
               l += offset;
          }
          if(l <= r and l_set_bits == k) return l;
     }

     return -1;
}

ll less_bits(ll l_set_bits, ll l, ll r, ll k) {
     // l got more bits than desired result so decrease l.
     ll tmp = 0;
     ll offset;
     ll co       = 0;
     string sl = bitset<nax>(l).to_string();
     for(ll i = nax - 1; i >= 0; i--) {
          if(sl[i] == '1') {
               offset = 1ll << 1ll * (nax - 1ll - i);
               tmp += offset;
               co++;
          }

          if(sl[i] == '0') {
               offset = 1ll << 1ll * (nax - 1ll - i);

               if((0ll + l + offset - tmp) <= r and (l_set_bits - co + 1 == k)) return (0ll + l + offset - tmp);

               if((0ll + l + offset - tmp) <= r and (l_set_bits - co + 1 > k)) {
                    return more_bits(l_set_bits - co + 1, (l + offset - tmp), r, k);
               }
          }
     }

     return -1;
}

ll solve(ll l, ll r, ll k) {
     if(k > 63) return -1;
     string sl    = bitset<nax>(l).to_string();
     string sr    = bitset<nax>(r).to_string();
     ll msb            = 0;
     ll l_set_bits = 0;

     for(ll i = 0; i < nax; i++) {
          if(sl[i] != sr[i]) break;
          if(sl[i] == '1') msb++;
     }

     if(msb > k) {
          return -1;
     }

     for(ll i = 0; i < nax; ++i) {
          if(sl[i] == '1') l_set_bits++;
     }

     if(l_set_bits < k) return more_bits(l_set_bits, l, r, k);

     if(l_set_bits == k) return l;

     return less_bits(l_set_bits, l, r, k);
}

int main() {
     ll T, k;
     ll l, r;
     cin >> T;

     for(ll i = 0; i < T; i++) {
          cin >> l >> r >> k;
          cout << solve(l, r, k) << "\n";
     }
     return 0;
}